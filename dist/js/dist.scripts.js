function validatePokemon(e) { return "object" == typeof e } function validatePokemonKeys(e) { const t = ["name", "height", "types"]; return 3 === Object.keys(e).length && Object.keys(e).every(function (e) { return t.includes(e) }) } let pokemonRepository = function () { let e = []; const t = "https://pokeapi.co/api/v2/pokemon/?limit=150"; function o(t) { validatePokemon(t) && e.push(t) } return { add: o, getAll: function () { return e }, getByName: function (t) { const o = e.filter(function (e) { return e.name === t }); return o.length > 0 ? o[0] : "This pokemon does not exist.." }, addListItem: function (e) { $(".list-group").append($("<li></li>").addClass("group-list-item col-lg-4 col-sm-12 col-md-6").append($("<button></button>").append(document.createTextNode(e.name)).addClass("btn btn-light").attr("data-toggle", "modal").attr("data-target", "#pokeModal"))) }, loadList: function () { return fetch(t).then(function (e) { return e.json() }).then(function (e) { e.results.forEach(function (e) { o({ name: e.name, detailsUrl: e.url }) }) }).catch(function (e) { console.error(e) }) }, loadDetails: function (e) { let t = e.detailsUrl; return fetch(t).then(function (e) { return e.json() }).then(function (t) { e.imageUrl = t.sprites.front_default, e.height = t.height, e.weight = t.weight, e.types = t.types, e.sprites = t.sprites }).catch(function (e) { console.error(e) }) } } }(); function addTypes(e) { let t = $("<div></div>").addClass("modal-type-wrapper text-center"); return e.forEach(e => { const o = document.createElement("div"); o.classList.add("type-container"); const n = document.createElement("p"); n.classList.add("type-name"), n.innerText = e.type.name; const a = document.createElement("div"); a.classList.add("icon-wrapper", e.type.name); const r = document.createElement("img"); r.src = `./assets/types/${e.type.name}.svg`, r.classList.add("type-svg"), a.appendChild(r), o.appendChild(a), o.appendChild(n), t.append(o) }), t } pokemonRepository.loadList().then(function () { pokemonRepository.getAll().forEach(function (e) { pokemonRepository.addListItem(e) }) }); const modalContent = document.querySelector("#pokeModal"); function resetSearch() { $(".group-list-item").each((e, t) => { $(t).show() }), $("input").val("") } $("#pokeModal").on("show.bs.modal", e => { let t = e.relatedTarget; $(".modal-body").html(""); let o, n = pokemonRepository.getByName(t.innerText.toLowerCase()); pokemonRepository.loadDetails(n).then(function () { let e; $(".modal-title").text(n.name), e = n.sprites.other["official-artwork"].front_default ? n.sprites.other["official-artwork"].front_default : n.sprites.other.home.front_default ? n.sprites.other.home.front_default : n.imageUrl, $(".modal-body").append($("<div></div>").addClass("text-center").append($("<img></img>").attr("src", e).addClass("modal-pokemon-image float-center"))).append($("<div></div>").addClass("text-center pokemon-stats").append($("<p></p>").text(`Height: ${n.height}`)).append($("<p></p>").text(`Weight: ${n.weight}`))), o = addTypes(n.types), $(".modal-body").append($("<div></div>").addClass("pokemon-type-flex").append(o)) }) }); const searchBar = document.querySelector("#search-button"); $("form").on("submit", function (e) { e.preventDefault(); const t = $("input").val().toLowerCase(); if ("" === t) return alert("Please enter a Pokemon name to search"), void resetSearch(); $(".group-list-item").each((e, o) => { $(o).show(), $(o).text().toLowerCase().indexOf(t) > -1 || $(o).hide() }) }), $(".clear-search").click(() => { resetSearch() });